---
import { getCollection } from "astro:content";

import ResearchEntry from "./ResearchEntry.astro";
import Section from "@/components/Section.astro";

const researchEntries = await getCollection("research");

const sortedResearchEntries = researchEntries.sort((a, b) => {
  // Parse the original date string back to Date for comparison
  // because you have a transformed date string "MMM yyyy" (e.g. "Nov 2022")
  // So parse original string or use original date field if you keep it somewhere
  // Let's assume 'a.data.date' is a string like "Nov 2022"

  const parseDate = (str: string) => {
    // Parse "MMM yyyy" string, fallback to Date parsing
    return new Date(Date.parse(str));
  };

  return parseDate(b.data.date).getTime() - parseDate(a.data.date).getTime();
});
---

<Section>
  <h2 class="mb-8 text-3xl">Research</h2>
  <div class="flex flex-col space-y-8 2xl:space-y-12">
    {sortedResearchEntries.map((r) => <ResearchEntry researchEntry={r} />)}
  </div>
</Section>
